name: release

on:
  workflow_run:
    types:
      - completed
    workflows:
      - ci
    branches:
      - master
      - next
      - beta
      - alpha
      # maintenance branches regex
      - "*.x"
      - "*.*.x"

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release on npm
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: "Download artifact"
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });

            let dependenciesArtefact = allArtifacts.data.artifacts.find((artifact) => {
              return artifact.name == "dependencies"
            });

            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: dependenciesArtefact.id,
               archive_format: 'zip',
            });

            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/deps.zip`, Buffer.from(download.data));

      - name: Unzip dependencies
        run: unzip -q deps.zip

      - name: Install pnpm
        uses: ./.github/actions/install-pnpm

      - name: Build the source code
        run: pnpm build

      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@master
        with:
          publish: pnpm publish
          commit: Version release
          title: Next release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  fail:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The ci workflow failed'
      - run: exit 1
