name: CI

on:
  pull_request:
    paths-ignore:
      - "**.md"

  push:
    branches:
      # latest release
      - master
      # pre releases
      - next
      - alpha
      - beta
      # snapshot releases
      - snapshot
      # maintenance releases
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x

env:
  CI: true

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Build
        run: pnpm build

      - name: Check all files formatting
        if: ${{ always() }}
        run: pnpm format:check .

      - name: Lint all files
        if: ${{ always() }}
        run: pnpm lint .

      - name: Type check
        if: ${{ always() }}
        run: pnpm typecheck

      - name: Tests with coverage
        if: ${{ always() }}
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

  test-dist:
    name: Run tests against dist files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        filename: [index.js, index.cjs]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Build
        run: pnpm build

      - name: Cleanup src folders to make sure the tests do not use source files
        run: |
          rm -rf packages/react-impulse/src/*
          rm -rf packages/react-impulse-form/src/*

      - name: Copy dist/${{ matrix.filename }} as src/index.ts
        run: |
          cp packages/react-impulse/dist/${{ matrix.filename }} packages/react-impulse/src/index.ts
          cp packages/react-impulse-form/dist/${{ matrix.filename }} packages/react-impulse-form/src/index.ts

      - name: Test
        run: pnpm test:run

  size-limit:
    name: Size Limit
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Check size
        uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_step: install
          build_script: build:minified

  release:
    name: Release on npm
    runs-on: ubuntu-latest
    needs: [checks, test-dist]
    # prevents this action from running on forks and only on pushes
    if: ${{ github.repository_owner == 'owanturist' && github.event_name == 'push' }}
    concurrency: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Change .changeset baseBranch to the current branch
        run: |
          perl -i -pe"s/\"baseBranch\":.*/\"baseBranch\": \"${{ github.ref_name }}\",/g" .changeset/config.json

      - name: Commit updated .changeset config
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Change .changeset `baseBranch` to ${{ github.ref_name }}"
          file_pattern: ".changeset/config.json"

      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@v1
        with:
          publish: pnpm run publish --tag=${{ github.ref_name == 'master' && 'latest' || github.ref_name == 'next' && 'next' || github.ref_name == 'alpha' && 'alpha' || github.ref_name == 'beta' && 'beta' || ' ' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
