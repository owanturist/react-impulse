name: CI

on:
  pull_request:
    paths-ignore:
      - "**.md"

  push:
    branches:
      # latest release
      - master
      # pre releases
      - next
      - alpha
      - beta
      # snapshot releases
      - snapshot
      # maintenance releases
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x

env:
  CI: true

jobs:
  install:
    name: Install node_modules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: Install dependencies
        shell: bash
        run: pnpm i --prefer-offline

      - name: Zip dependencies for uploading
        # [q] quite
        # [r] recursive
        # [y] store symlinks as symlinks
        run: zip -qry deps.zip ./node_modules

      - name: Upload dependencies artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dependencies
          path: deps.zip
          retention-days: 7
          if-no-files-found: error

  checks:
    name: Checks
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore environment
        uses: ./.github/actions/restore-env

      - name: Type check
        if: ${{ always() }}
        run: pnpm typecheck

      - name: Lint
        if: ${{ always() }}
        run: pnpm lint

      - name: Test against React 18
        if: ${{ always() }}
        run: pnpm test:run -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

      - name: Install React 17 and legacy testing libraries
        run: pnpm add -D react@17 @testing-library/react@12 @testing-library/react-hooks@7

      - name: Test against React 17
        run: pnpm test:run

      - name: Install React 16
        run: pnpm add -D react@16

      - name: Test against React 16
        run: pnpm test:run

  size-limit:
    name: Size Limit
    runs-on: ubuntu-latest
    needs: install
    if: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore environment
        uses: ./.github/actions/restore-env

      - name: Check size
        uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_step: install
          build_script: build --env.NODE_ENV production --minify

  release:
    name: Release on npm
    runs-on: ubuntu-latest
    needs: checks
    # prevents this action from running on forks and only on pushes
    if: ${{ github.repository_owner == 'owanturist' && github.event_name == 'push' }}
    concurrency: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Restore environment
        uses: ./.github/actions/restore-env

      - name: Change .changeset baseBranch to the current branch
        run: |
          perl -i -pe"s/\"baseBranch\":.*/\"baseBranch\": \"${{ github.ref_name }}\",/g" .changeset/config.json

      - name: Commit updated .changeset config
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Change .changeset `baseBranch` to ${{ github.ref_name }}"
          file_pattern: ".changeset/config.json"

      - name: Get changeset status
        run: pnpm cs status --output ./changeset-status.json

      - name: Read the new version
        id: new-version
        uses: notiz-dev/github-action-json-property@release
        continue-on-error: true
        with:
          path: ./changeset-status.json
          prop_path: "releases.0.newVersion"

      - name: Read the old version
        id: old-version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: ./package.json
          prop_path: "version"

      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@v1
        with:
          publish: pnpm run publish --tag=${{ github.ref_name == 'master' && 'latest' || github.ref_name == 'next' && 'next' || github.ref_name == 'alpha' && 'alpha' || github.ref_name == 'beta' && 'beta' || ' ' }}
          commit: Release `${{ steps.old-version.outputs.prop }}` -> `${{ steps.new-version.outputs.prop }}`
          title: Release `${{ steps.old-version.outputs.prop }}` -> `${{ steps.new-version.outputs.prop }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
